<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eats.mapper.user.MainMapper">
	<select id="getCateKey" resultType="com.eats.user.model.CateKeyDTO">
		select * from cate_key order by cate_key_idx asc
	</select>

	<select id="getValueList" parameterType="Integer" resultType="String">
		select cate_value_name from cate_value where
		cate_key_idx=#{cate_key_idx}
	</select>

	<select id="getCityList" resultType="com.eats.user.model.AreaDTO">
		select * from area where area_lev=1
	</select>

	<select id="getUnitList" parameterType="Integer" resultType="String">
		select area_name from area where area_lev=2 and
		parent_idx=#{area_idx}
	</select>

	<select id="getPopularReviews" parameterType="String" resultType="Integer">
		select rev_idx from (select rownum rn, rev_idx from (select rev_idx
		<choose>
			<when test="areaWord != null and areaWord != ''">
				from (select rev_like.*
				from rev_like, (select rev_idx
				from review, (select reserve_idx
				from reservation, (select store_idx
				from store where store_addr like '%'||#{areaWord}||'%')a
				where reservation.store_idx=a.store_idx)b
				where review.reserve_idx=b.reserve_idx)c
				where rev_like.rev_idx=c.rev_idx)
			</when>
			<otherwise>
				from rev_like
			</otherwise>
		</choose>
		group by rev_idx
		order by count(*) desc))
		where rn between 1 and 3
	</select>

	<select id="getReview" parameterType="Integer" resultType="com.eats.user.model.ReviewDTO">
		select c.*, user_nickname
		from (select b.*, store_name,
		store_addr
		from (select a.*, user_idx, store_idx, reserve_date
		from
		(select * from review where rev_idx=#{rev_idx})a, reservation
		where
		a.reserve_idx=reservation.reserve_idx)b, store
		where
		store.store_idx=b.store_idx)c, user_profile
		where
		user_profile.user_idx=c.user_idx
	</select>

	<select id="getStorePoint" parameterType="Integer" resultType="Double">
		select round(avg, 2)
		from (select avg(rev_score) avg
		from
		(select review.*, store_idx
		from review, reservation
		where
		review.reserve_idx=reservation.reserve_idx and
		store_idx=#{store_idx}))a
	</select>

	<select id="getFollowerCount" parameterType="Integer" resultType="Integer">
		select count(*) from follow where
		following_idx=#{user_idx}
	</select>

	<select id="getLikeCount" parameterType="Integer" resultType="Integer">
		select count(*) from rev_like where rev_idx=#{rev_idx}
	</select>
	
	<select id="getTag" parameterType="Integer" resultType="String">
		select cate_value_name from cate_value where cate_value_idx=#{cate_value_idx}
	</select>
</mapper>