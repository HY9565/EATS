<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.eats.mapper.user.ReservationMapper">

	<select id="getMaxPeopleCnt" resultType="int" parameterType="int">
			SELECT
				MAX(STS_NUM) AS max_people
			FROM
				STORE_TABLE_SET
			WHERE
				SG_IDX=(
					SELECT
						SG_IDX
					FROM
						STORE_GRID
					WHERE
						STORE_IDX = #{store_idx}
				)
	</select>
	
	<select id="getRunningDays" resultType="String" parameterType="int">
		SELECT
			STIME_DAY
		FROM
			STORE_TIME
		WHERE
			STORE_IDX=#{store_idx}
	</select>
	
	<select id="getTimeListWithYN" resultType="map" parameterType="map">
		WITH DAY_MAPPING AS(
			SELECT
				TO_CHAR(TO_DATE(#{reserve_date}, 'YYYY-MM-DD'), 'D') as day_num,
				CASE TO_CHAR(TO_DATE(#{reserve_date}, 'YYYY-MM-DD'), 'D')
					WHEN '1' THEN '일'
					WHEN '2' THEN '월'
					WHEN '3' THEN '화'
					WHEN '4' THEN '수'
					WHEN '5' THEN '목'
					WHEN '6' THEN '금'
					WHEN '7' THEN '토'
				END as kor_day
			FROM DUAL
		),
		STORE_HOURS AS (
		    SELECT 
		        STIME_START,
		        STIME_END,
		        SUBSTR(STIME_BREAK, 1, INSTR(STIME_BREAK, '-')-1) as break_start,
		        SUBSTR(STIME_BREAK, INSTR(STIME_BREAK, '-')+1) as break_end,
		        TO_CHAR(TO_DATE(STIME_END, 'HH24:MI') - 1/24, 'HH24:MI') as last_available_hour
		    FROM STORE_TIME st
		    INNER JOIN DAY_MAPPING dm ON st.STIME_DAY = dm.kor_day
		    WHERE st.STORE_IDX = #{store_idx}
		),
		ALL_HOURS AS (
		    SELECT 
		        LPAD(TRUNC((LEVEL-1)/2), 2, '0') || ':' || 
		        CASE MOD((LEVEL-1), 2) WHEN 0 THEN '00' ELSE '30' END as res_hour
		    FROM DUAL
		    CONNECT BY LEVEL <![CDATA[ <= ]]> 48
		),
		AVAILABLE_SLOTS AS (
		    SELECT ah.res_hour
		    FROM ALL_HOURS ah, STORE_HOURS sh
		    WHERE ah.res_hour <![CDATA[ >= ]]> sh.STIME_START
		    AND ah.res_hour <![CDATA[ <= ]]> sh.last_available_hour
		    AND (
		        sh.break_start IS NULL 
		        OR ah.res_hour <![CDATA[ < ]]> sh.break_start 
		        OR ah.res_hour <![CDATA[ >= ]]> sh.break_end
		    )
		),
		AVAILABLE_CHECK AS (
		    SELECT 
		        a.res_hour as reserve_hour,
		        CASE 
		            WHEN EXISTS (
		                SELECT 1
		                FROM STORE_TABLE_SET sts
		                JOIN STORE_GRID sg ON sts.SG_IDX = sg.SG_IDX
		                WHERE sg.STORE_IDX = #{store_idx}
		                AND sts.STS_NUM <![CDATA[ >= ]]> #{reserve_cnt}
		                AND NOT EXISTS (
		                    SELECT 1 
		                    FROM RESERVATION r
		                    WHERE r.RESERVE_TABLE_IDX = sts.STS_IDX
		                    AND r.RESERVE_TIME = a.res_hour
		                    AND r.RESERVE_DATE = TO_DATE(#{reserve_date}, 'YYYY-MM-DD')
		                   	AND r.RESERVE_STATE IN (0, 1)
		                )
		            ) THEN 'Y'
		            ELSE 'N'
		        END as AVAILABLE
		    FROM AVAILABLE_SLOTS a
		)
		SELECT a.*, d.* FROM AVAILABLE_CHECK a, day_mapping d
		ORDER BY TO_DATE(reserve_hour, 'HH24:MI')
	</select>
	<select id="getAvailableTable" parameterType="map" resultType="map">
		WITH ALL_TABLE_TYPES AS (
	        SELECT 
	            cate_value_name as table_type
	        FROM cate_value
	        WHERE cate_value_idx IN (
	            SELECT sts_type_idx 
	            FROM store_table_set 
	            WHERE sg_idx IN (
	                SELECT sg_idx 
	                FROM store_grid 
	                WHERE store_idx = #{store_idx}
	            )
	        )
	    ),
	    AVAILABLE_TABLE_SET AS (
	        SELECT 
	            sts.STS_IDX,
	            sts.STS_TYPE_IDX,
	            cv.CATE_VALUE_NAME as table_type
	        FROM STORE_TABLE_SET sts
	        JOIN STORE_GRID sg ON sts.SG_IDX = sg.SG_IDX
	        JOIN CATE_VALUE cv ON sts.STS_TYPE_IDX = cv.CATE_VALUE_IDX
	        WHERE sg.STORE_IDX = #{store_idx}
	        AND sts.STS_NUM <![CDATA[ >= ]]> #{reserve_cnt}
	        AND NOT EXISTS (
	            SELECT 1 
	            FROM RESERVATION r
	            WHERE r.RESERVE_TABLE_IDX = sts.STS_IDX
	            AND r.RESERVE_TIME = #{reserve_time}
	            AND r.RESERVE_DATE = TO_DATE(#{reserve_date}, 'YYYY-MM-DD')
	            AND r.RESERVE_STATE IN (0, 1)
	        )
	    )
	    SELECT 
	        att.table_type,
	        COUNT(ats.STS_IDX) as count
	    FROM ALL_TABLE_TYPES att
	    LEFT JOIN AVAILABLE_TABLE_SET ats ON att.table_type = ats.table_type
	    GROUP BY att.table_type
    	ORDER BY count DESC
	</select>
	<select id="getMinTableIdx" resultType="int" parameterType="map">
		WITH DAY_MAPPING AS (
		    SELECT 
		        TO_CHAR(TO_DATE(#{reserve_date}, 'YYYY-MM-DD'), 'D') as day_num,
		        CASE TO_CHAR(TO_DATE(#{reserve_date}, 'YYYY-MM-DD'), 'D')
		            WHEN '1' THEN '일'
		            WHEN '2' THEN '월'
		            WHEN '3' THEN '화'
		            WHEN '4' THEN '수'
		            WHEN '5' THEN '목'
		            WHEN '6' THEN '금'
		            WHEN '7' THEN '토'
		        END as kor_day
		    FROM DUAL
		),
		STORE_HOURS AS (
		    SELECT 
		        STIME_START,
		        STIME_END,
		        SUBSTR(STIME_BREAK, 1, INSTR(STIME_BREAK, '-')-1) as break_start,
		        SUBSTR(STIME_BREAK, INSTR(STIME_BREAK, '-')+1) as break_end,
		        TO_CHAR(TO_DATE(STIME_END, 'HH24:MI') - 1/24, 'HH24:MI') as last_available_hour
		    FROM STORE_TIME st
		    INNER JOIN DAY_MAPPING dm ON st.STIME_DAY = dm.kor_day
		    WHERE st.STORE_IDX = #{store_idx}
		),
		ALL_HOURS AS (
		    SELECT 
		        LPAD(TRUNC((LEVEL-1)/2), 2, '0') || ':' ||
		        CASE MOD((LEVEL-1), 2) WHEN 0 THEN '00' ELSE '30' END as res_hour
		    FROM DUAL
		    CONNECT BY LEVEL <![CDATA[ <= ]]> 48
		),
		AVAILABLE_SLOTS AS (
		    SELECT ah.res_hour
		    FROM ALL_HOURS ah, STORE_HOURS sh
		    WHERE ah.res_hour <![CDATA[ >= ]]> sh.STIME_START
		    AND ah.res_hour <![CDATA[ <= ]]> sh.last_available_hour
		    AND (
		        sh.break_start IS NULL
		        OR ah.res_hour <![CDATA[ < ]]> sh.break_start
		        OR ah.res_hour <![CDATA[ >= ]]> sh.break_end
		    )
		)
		SELECT MIN(sts.STS_IDX) as min_sts_idx
		FROM AVAILABLE_SLOTS a
		CROSS JOIN STORE_TABLE_SET sts
		JOIN STORE_GRID sg ON sts.SG_IDX = sg.SG_IDX
		WHERE sg.STORE_IDX = #{store_idx}
		AND sts.STS_NUM <![CDATA[ >= ]]> #{reserve_count}
		AND NOT EXISTS (
		    SELECT 1 
		    FROM RESERVATION r
		    WHERE r.RESERVE_TABLE_IDX = sts.STS_IDX
		    AND r.RESERVE_TIME = '17:00' --수저
		    AND r.RESERVE_DATE = TO_DATE(#{reserve_date}, 'YYYY-MM-DD')
		    AND r.RESERVE_STATE IN (0, 1)
		)
		AND a.res_hour = '17:00'
		AND sts.sts_type_idx = (
		    SELECT cate_value_idx 
		    FROM cate_value 
		    WHERE cate_value_name=#{reserve_table}
		)
	</select>
	
	<insert id="makeReserve" parameterType="com.eats.user.model.ReservationDTO">
		INSERT INTO
			RESERVATION
		VALUES(
			RESERVE_IDX_SEQ.nextval
			, #{user_idx}
			, #{store_idx}
			, #{reserve_date}
			, #{reserve_time}
			, #{reserve_count}
			, #{reserve_table_idx}
			, #{request, jdbcType=VARCHAR}
			, 0
			, SYSDATE
		)
	</insert>
</mapper>