<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eats.mapper.user.MyplateMapper">
	<!-- 예약 상태 별 총 예약건수 가져오기 -->
	<select id="getTotalReserveCntByState" parameterType="int" resultType="map">
		WITH STATE AS (
			SELECT 0 AS RESERVE_STATE FROM DUAL
			UNION ALL
			SELECT 1 FROM DUAL
			UNION ALL
			SELECT 2 FROM DUAL
			UNION ALL
			SELECT 3 FROM DUAL
			UNION ALL
			SELECT 4 FROM DUAL
		)
		SELECT
			S.RESERVE_STATE
			, NVL(COUNT(R.RESERVE_STATE), 0) AS COUNT
		FROM
			STATE S
		LEFT JOIN
			RESERVATION R
		ON
			S.RESERVE_STATE = R.RESERVE_STATE AND R.USER_IDX = #{user_idx}
		GROUP BY
			S.RESERVE_STATE
		ORDER BY
			S.RESERVE_STATE
	</select>
	<!-- 예약 정보, 예약한 매장 정보 가져오기 -->
	<select id="getReserveInfoList" parameterType="int" resultType="map">
		SELECT
			R.*, SI.STORE_IMG, S.*
		FROM
			RESERVATION R, STORE_IMG SI, STORE S
		WHERE
			R.USER_IDX=#{user_idx}
		AND
			SI.STORE_IDX = R.STORE_IDX
		AND 
			SI.IMG_ORDER = 1
		AND
			S.STORE_IDX = SI.STORE_IDX
		ORDER BY 
			R.RESERVE_DATE DESC
	</select>
	<!-- 해당 예약 건에 리뷰가 있는지 학인 0이면 없는 거 -->
	<select id="checkReviewExist" parameterType="int" resultType="int">
		SELECT
			COUNT(*) AS COUNT
		FROM
			REVIEW
		WHERE
			RESERVE_IDX=#{reserve_idx}
	</select>
	<!-- D-day 가져오기 -->
	<select id="getDday" parameterType="int" resultType="int">
		SELECT
		    CEIL(RESERVE_DATE - SYSDATE) AS D_DAY
		FROM
		    RESERVATION
		WHERE
		    RESERVE_IDX = #{reserve_idx}
	</select>
	<!-- 예약 상세 페이지에 필요한 예약 정보 가져오기 -->
	<select id="getReserveInfoByreserve" parameterType="int" resultType="com.eats.user.model.ReservationDTO">
		SELECT 
			R.*, S.STORE_NAME, SI.STORE_IMG
		FROM 
			RESERVATION R
		INNER JOIN 
			STORE S ON R.STORE_IDX = S.STORE_IDX
		INNER JOIN 
			STORE_IMG SI ON S.STORE_IDX = SI.STORE_IDX
		WHERE 
			R.RESERVE_IDX = #{reserve_idx}
		AND 
			SI.IMG_ORDER = 1
	</select>
	<!-- 나의 알림 신청 목록: 날짜가 지난 것은 노출하지 않음 -->
	<select id="getAlarmList" parameterType="int" resultType="com.eats.user.model.AlarmDTO">
		SELECT
			A.*, S.STORE_NAME, SI.STORE_IMG, S_ALARM_DATE - SYSDATE AS D_DAY
		FROM
			S_ALARM A
		INNER JOIN 
			STORE S ON A.STORE_IDX = S.STORE_IDX
		INNER JOIN 
			STORE_IMG SI ON A.STORE_IDX = S.STORE_IDX
		WHERE
			USER_IDX=#{user_idx}
		AND 
			SI.IMG_ORDER = 1
		AND 
			S_ALARM_DATE-SYSDATE > 0
		ORDER BY 
			S_ALARM_DATE DESC, S_ALARM_TIME DESC
	</select>
	<!-- 리뷰 작성자와 로그인한 사람의 일치 여부 확인 -->
	<select id="checkWriter" parameterType="int" resultType="int">
		SELECT
			USER_IDX
		FROM
			RESERVATION
		WHERE
			RESERVE_IDX=#{reserve_idx}
	</select>
	<!-- 리뷰 내용 가져오기 -->
	<select id="getRevInfo" resultType="map" parameterType="int">
		SELECT
			*
		FROM
			REVIEW
		WHERE
			RESERVE_IDX = #{reserve_idx}
	</select>
	<!-- 예약취소 -->
	<update id="cancelReserve" parameterType="int">
		UPDATE
			RESERVATION
		SET
			RESERVE_STATE = 2
		WHERE
			RESERVE_IDX = #{reserve_idx}
	</update>
	<!-- 캘린더에 보여줄 예약리스트 -->
	<select id="reserveListCal" parameterType="map" resultType="com.eats.user.model.ReservationDTO">
		SELECT
			R.*, SI.STORE_IMG, S.STORE_NAME
		FROM
			RESERVATION R
		INNER JOIN
			STORE S ON R.STORE_IDX = S.STORE_IDX
		INNER JOIN
			STORE_IMG SI ON S.STORE_IDX = SI.STORE_IDX
		WHERE
			R.USER_IDX=#{user_idx}
		AND
			R.RESERVE_DATE = TO_DATE(#{date}, 'YYYY-MM-DD')
		AND
			SI.IMG_ORDER = 1
	</select>
	<!-- 캘린더에 보여줄 알림리스트 -->
	<select id="alarmListCal" parameterType="map" resultType="com.eats.user.model.AlarmDTO">
		SELECT
			A.*, SI.STORE_IMG, S.STORE_NAME
		FROM
			S_ALARM A
		INNER JOIN
			STORE S ON S.STORE_IDX = A.STORE_IDX
		INNER JOIN
			STORE_IMG SI ON S.STORE_IDX = SI.STORE_IDX
		WHERE
			A.S_ALARM_DATE = TO_DATE(#{date}, 'YYYY-MM-DD')
		AND
			A.USER_IDX = #{user_idx}
		AND
			SI.IMG_ORDER = 1
	</select>
</mapper>